{
    "openapi": "3.0.0",
    "info": {
        "title": "REST API for AQM",
        "version": "1.0.0",
        "description": "This is the REST API for AQM"
    },
    "url": "https://localhost:5000",
    "basePath": "/api/v1",
    "tags": [
        {
            "name": "auth",
            "description": "Authentication APIs"
        },
        {
            "name": "adminapi",
            "description": "Admin APIs"
        },
        {
            "name": "userapi",
            "description": "User APIs"
        },
        {
            "name": "teacherapi",
            "description": "Teacher APIs"
        }
    ],
    "paths": {
        "/api/v1/adminapi": {
            "post": {
                "summary": "Create a competition registration.",
                "description": "Requires admin access token with write access. Creates a new competition registration.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/list": {
            "get": {
                "summary": "Get admins.",
                "description": "Requires admin access token. Get admins.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/admin{id}": {
            "get": {
                "summary": "Get admin by id.",
                "description": "Requires admin access token. Get admin by id.",
                "tags": ["adminapi"]
            },
            "patch": {
                "summary": "Update admin.",
                "description": "Requires admin access token with write access. Update admin.",
                "tags": ["adminapi"]
            },
            "delete": {
                "summary": "Delete competition registration.",
                "description": "Requires admin access token with write access. Delete competition registration.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/admin/password-reset-link/{id}": {
            "post": {
                "summary": "Generates password reset link for an admin user with id {id}.",
                "description": "Requires admin access token. generates reset password link.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/teacher{id}": {
            "post": {
                "summary": "Create teacher.",
                "description": "Requires admin access token with write access. Create a teacher.",
                "tags": ["adminapi"]
            },
            "get": {
                "summary": "Get teacher by id.",
                "description": "Requires admin access token with write access. Get teacher by id.",
                "tags": ["adminapi"]
            },
            "patch": {
                "summary": "Update teacher.",
                "description": "Requires admin access token with write access. Update teacher.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/teacher/list": {
            "get": {
                "summary": "Get teachers.",
                "description": "Requires admin access token with write access. Get teachers.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/teacher/{id}": {
            "delete": {
                "summary": "Delete teacher by id.",
                "description": "Requires admin access token with write access. Delete teacher by id.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/teacher/password/{teacherId}": {
            "post": {
                "summary": "resets teacher password.",
                "description": "Requires admin access token with write access.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/user": {
            "post": {
                "summary": "Create user.",
                "description": "Requires admin access token with write access. Create user.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/user/list": {
            "get": {
                "summary": "Get users.",
                "description": "Requires admin access token with write access. Get usesr.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/user/{id}": {
            "get": {
                "summary": "Get user by id.",
                "description": "Requires admin access token with write access. Get user by id.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/user{id}": {
            "gepatcht": {
                "summary": "Update user.",
                "description": "Requires admin access token with write access. Update user.",
                "tags": ["adminapi"]
            },
            "delete": {
                "summary": "Delete user by id.",
                "description": "Requires admin access token with write access. Delete user by id.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/group": {
            "post": {
                "summary": "Update a group.",
                "description": "Requires admin access token. Updates a group.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/group/list": {
            "get": {
                "summary": "Get groups.",
                "description": "Requires admin access token. Get groups. Supports pagination.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/group/{id}": {
            "get": {
                "summary": "Get a group by id.",
                "description": "Requires admin access token. Gets a group by id.",
                "tags": ["adminapi"]
            },
            "patch": {
                "summary": "update a group.",
                "description": "Requires admin access token. Updates a group.",
                "tags": ["adminapi"]
            },
            "delete": {
                "summary": "Delete a group by id.",
                "description": "Requires admin access token. Deletes a group by id.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/group/user/list/{id}": {
            "get": {
                "summary": "Gets a list of a user groups.",
                "description": "Requires admin access token. Gets a list of a user groups.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/group/user/enroll/": {
            "post": {
                "summary": "Enrolls a user to a group.",
                "description": "Requires admin access token. Enrolls a user to a group.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/card/user/": {
            "post": {
                "summary": "Create card for user.",
                "description": "Creates card for user.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/card/user/{userId}": {
            "get": {
                "summary": "Get user last card by userId.",
                "description": "Get user last card by userId. null is returned if there is no card.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/competition/list": {
            "get": {
                "summary": "Get competitions.",
                "description": "Requires admin access token. Get competitions.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/competition{id}": {
            "get": {
                "summary": "Get competition registration by id.",
                "description": "Requires admin access token. Get competition registration by id.",
                "tags": ["adminapi"]
            },
            "patch": {
                "summary": "Update competition registration.",
                "description": "Requires admin access token with write access. Update competition registration.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/adminapi/competition/registration/list": {
            "get": {
                "summary": "Get competition registrations.",
                "description": "Requires admin access token. Get competition registrations.",
                "tags": ["adminapi"]
            }
        },
        "/api/v1/auth/admin/login": {
            "post": {
                "summary": "User login.",
                "description": "User login.",
                "tags": ["auth"]
            }
        },
        "/api/v1/auth/teacher/login": {
            "post": {
                "summary": "Teacher login.",
                "description": "Teacher login.",
                "tags": ["auth"]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "summary": "Logout.",
                "description": "Logout.",
                "tags": ["auth"]
            }
        },
        "/api/v1/auth/refresh-token": {
            "post": {
                "summary": "Refresh token.",
                "description": "Refresh token.",
                "tags": ["auth"]
            }
        },
        "/api/v1/auth/admin/reset-password/": {
            "post": {
                "summary": "reset admin password.",
                "description": "reset admin password with a reset token.",
                "tags": ["auth"]
            }
        },
        "/api/v1/teacherapi": {
            "patch": {
                "summary": "Update teacher.",
                "description": "Requires teacher access token. Updates the teacher.",
                "tags": ["teacherapi"]
            }
        },
        "/api/v1/teacherapi/group/list": {
            "get": {
                "summary": "Get teacher groups",
                "description": "Requires teacher access token. Returns a list of teacher groups. Supports pagination parameters.",
                "tags": ["teacherapi"]
            }
        },
        "/api/v1/userapi": {
            "patch": {
                "summary": "Update user.",
                "description": "Requires user access token. Updates the user.",
                "tags": ["userapi"]
            }
        }
    },
    "components": {}
}
